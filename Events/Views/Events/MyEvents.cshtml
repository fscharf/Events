@using Events.Models
@model SubsViewModel
@using System.Security.Claims
@{
    ViewBag.Title = "Meus eventos";
    var userAuth = (ClaimsIdentity)User.Identity;
}

<div class="row mb-3">
    <div class="col-lg">
        <h5 class="text-muted">@ViewBag.Title</h5>
    </div>
</div>

@if (userAuth.IsAuthenticated)
{
<div class="row mb-3">
    @foreach (var item in Model.InscricaoVM)
    {
        foreach (var eventItem in Model.EventoVM.Where(x => x.COD_EVENTO == item.COD_EVENTO))
        {
            if (item.COD_USUARIO != Convert.ToInt32(userAuth.Claims.Where(c => c.Type == ClaimTypes.Sid).FirstOrDefault().Value))
            {
            }
            else
            {
                @Html.HiddenFor(modelItem => item.COD_EVENTO)
                @Html.HiddenFor(modelItem => eventItem.COD_EVENTO)
                <div class="col-lg-6 mb-3">
                    <div class="card">
                        <div class="row no-gutters">
                            <div class="col-md-4">
                                <img src="@Url.Content(eventItem.IMAGEM_URL)"
                                     alt="Evento"
                                     class="card-img h-100 object-fit-cover" />
                            </div>
                            <div class="col-md-8 my-auto">
                                <div class="card-body text-left">
                                    <a href="#" class="card-link float-right" data-toggle="dropdown" title="Opções">
                                        <i class="fas fa-ellipsis-h"></i>
                                    </a>
                                    <div class="dropdown-menu dropdown-menu-right bg-white shadow-sm">
                                        <a class="dropdown-item" href="#"><i class="fas fa-print"></i> Imprimir</a>
                                        <a href="#" onclick="Delete(@item.COD_INSCRICAO)" class="dropdown-item"><i class="fas fa-times-circle"></i> Cancelar inscrição</a>
                                    </div>
                                    <div class="text-muted font-weight-bold mb-3" style="font-size: 0.8rem">
                                        <span class="mr-2"><i class="fas fa-calendar mr-2"></i>@Html.DisplayFor(modelItem => eventItem.DATA)</span>
                                        <span><i class="fas fa-clock mr-2"></i>@Html.DisplayFor(modelItem => eventItem.HORARIO)</span><br />
                                    </div>
                                    <a href="@Url.Action("Details", "Events", new { id = item.COD_EVENTO })" class="card-title h5 text-truncate" title="@Html.DisplayFor(modelItem => eventItem.TITULO)">@Html.DisplayFor(modelItem => eventItem.TITULO)</a>

                                    <p class="card-text text-muted text-truncate">@Html.DisplayFor(modelItem => eventItem.DESCRICAO)</p>
                                    <hr />
                                    <p>Código de inscrição: <span class="text-muted">@Html.DisplayFor(modelItem => item.COD_INSCRICAO)</span></p>
                                    <a href="#" onclick="QRCode(@item.COD_INSCRICAO)" class="card-link"><i class="fas fa-qrcode"></i> QR Code</a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        }
    }
</div>
}

@section scripts {
    <script>
        $(function () {
            var successMsg = '@TempData["Success"]';

            if (successMsg != '') {
                iziToast.success({
                    title: 'Sucesso',
                    message: successMsg
                });
            }
        })
        function Delete(id) {
            iziToast.warning({
                backgroundColor: '#6930EE',
                theme: 'dark',
                progressBar: false,
                timeout: false,
                close: false,
                overlay: true,
                displayMode: 'once',
                zindex: 9999,
                title: 'Aviso',
                message: 'Tem certeza que quer cancelar sua inscrição?',
                position: 'center',
                buttons: [
                    ['<button><strong>Sim</strong></button>', function () {

                        location.href = '@Url.Action("DeleteSub", "Events")/' + id;

                    }, null],
                    ['<button>Não</button>', function (instance, toast) {

                        instance.hide({ transitionOut: 'fadeOut' }, toast, 'button');

                    }],
                ],
                onClosing: function (instance, toast, closedBy) {
                    console.info('Closing | closedBy: ' + closedBy);
                },
                onClosed: function (instance, toast, closedBy) {
                    console.info('Closed | closedBy: ' + closedBy);
                }
            });
        }

        function QRCode(id) {
            iziToast.show({
                backgroundColor: '#fff',
                theme: 'light',
                progressBar: false,
                timeout: false,
                close: false,
                overlay: true,
                displayMode: 'once',
                zindex: 9999,
                title: 'QR Code',
                maxWidth: '350px',
                message: '<div class="text-center"><img src="https://chart.googleapis.com/chart?cht=qr&chl=' + id + '&chs=150x150&choe=UTF-8&chld=L|2" alt="QR Code" title="' + id + '" class= "img-fluid my-4" /><p>Apresente o código QR quando estiver no evento para validar sua presença.</p></div>',
                position: 'center',
                buttons: [
                    ['<button>Fechar</button>', function (instance, toast) {

                        instance.hide({ transitionOut: 'fadeOut' }, toast, 'button');

                    }],
                ],
                onClosing: function (instance, toast, closedBy) {
                    console.info('Closing | closedBy: ' + closedBy);
                },
                onClosed: function (instance, toast, closedBy) {
                    console.info('Closed | closedBy: ' + closedBy);
                }
            });
        }
    </script>
}
