@model Events.Models.USUARIO

@Styles.Render("~/forms/css")

<div class="row">
    <div class="col-lg-5 mx-auto rounded border bg-white my-5 p-5">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken();
            @Html.HiddenFor(model => model.COD_USUARIO)

            <div class="text-center mb-4">
                <a href="/" class="main-font h1">Events</a>
                <p class="text-muted">@ViewBag.Title</p>
            </div>

            if (TempData["Error"] != null)
            {
                <div class="form-group alert-auto-hide">
                    <div class="alert alert-danger" role="alert">
                        @TempData["Error"]
                    </div>
                </div>
            }

            <div class="form-group">
                @Html.DropDownListFor(model => model.COD_PERFIL, new List<SelectListItem> {
                         new SelectListItem { Text = "Tipo de cadastro", Value = "", Selected = true },
                         new SelectListItem { Text = "Sou aluno", Value = "1" },
                         new SelectListItem { Text = "Sou visitante", Value = "2" }
                }, htmlAttributes: new { @class = "custom-select", @required = "required" })
            </div>

            <div class="form-group">
                @Html.EditorFor(model => model.NOME, new
                {
                    htmlAttributes = new
                    {
                @class = "form-control",
                placeholder = "Nome completo",
                minlength = "3",
                maxlength = "50",
                required = "required",
                pattern = @"[A-Za-zÀ-ú ']{4,}"
                    }
                })
            </div>

            <div class="form-group">
                @Html.EditorFor(model => model.EMAIL, new
                {
                    htmlAttributes = new
                    {
                @class = "form-control",
                placeholder = "Email",
                type = "email",
                minlength = "3",
                maxlength = "35",
                required = "required"
                    }
                })
            </div>

            <div class="form-group">
                @Html.EditorFor(model => model.CELULAR, new
                {
                    htmlAttributes = new
                    {
                @class = "form-control",
                placeholder = "Celular",
                type = "text",
                minlength = "11",
                maxlength = "11",
                required = "required",
                pattern = "[0-9]+"
                    }
                })
            </div>

            <div class="form-group">
                @Html.EditorFor(model => model.SENHA, new
                {
                    htmlAttributes = new
                    {
                @class = "form-control",
                type = "password",
                id = "senha",
                placeholder = "Escolha uma senha",
                minlength = "6",
                maxlength = "20",
                pattern = @"^(?=.*\d)(?=.*[a-z])(?=.*[A-Z])(?!.*\s).*$",
                required = "required"
                    }
                })
                <small class="text-muted ml-2">Escolha entre 6-20 caracteres.</small>
                <a href="#">
                    <i class="fas fa-info-circle"
                       title="Sua senha deve conter ao menos uma letra maiúscula, uma letra minúscula e um número."
                       data-toggle="tooltip">
                    </i>
                </a>
            </div>

            <div class="form-group">
                <input class="form-control" placeholder="Confirme a senha" type="password" id="confirmaSenha" required />
            </div>

            <div class="form-group">
                <button type="submit" class="btn btn-primary btn-lg btn-block mb-2">CRIAR CONTA</button>
                <div class="text-muted text-center">
                    <span>Já tem conta?</span>
                    <a href="/entrar">Iniciar sessão</a>
                </div>
            </div>
        }
    </div>
</div>

@section scripts {
    <script>
        var senha = document.getElementById("senha"),
            confirmaSenha = document.getElementById("confirmaSenha");

        function validarSenha() {
            if (senha.value != confirmaSenha.value) {
                confirmaSenha.setCustomValidity("Senhas não conferem.");
            } else {
                confirmaSenha.setCustomValidity('');
            }
        }

        senha.onchange = validarSenha;
        confirmaSenha.onkeyup = validarSenha;
    </script>
}