@{
    ViewBag.Title = "Faça seu cadastro";
    Layout = "~/Views/Layout/_EventsLayout.cshtml";
}

@if (Session["Id"] != null)
{
    Response.Redirect("/");
}

@Styles.Render("~/custom/css")

<div class="container my-5">
    <div class="row mb-3">
        <div class="col-lg text-center">
            <a href="/" class="main-font text-light display-4">Events</a>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-5 mx-auto">
            <div class="container rounded bg-white shadow-sm p-5">
                <form action="/cadastro/criar" class="needs-validation" method="post" novalidate>
                    <!--tipos de cadastro-->
                    <h2 class="text-center mb-3">
                        @ViewBag.Title
                    </h2>
                    <!--/tipos de cadastro-->
                    <!-- nome -->
                    <div class="form-group">
                        <input class="form-control" type="text" name="nome" id="nome" placeholder="Nome completo"
                               minlength="3" maxlength="50" pattern="[a-zA-Záãâéêíîóôõú\s]+$" required>
                        <div class="invalid-feedback">Digite um nome válido.</div>
                    </div>
                    <!-- cpf -->
                    <div class="form-group">
                        <input class="form-control" type="text" name="cpf" id="cpf" placeholder="CPF"
                               minlength="11" maxlength="11" pattern="[0-9]+$" required>
                        <div class="invalid-feedback">Digite um CPF válido.</div>
                    </div>
                    <!-- email -->
                    <div class="form-group">
                        <input class="form-control" type="email" name="email" id="email" placeholder="E-mail"
                               required>
                        <div class="invalid-feedback">Digite um e-mail válido.</div>
                    </div>
                    <!-- senha -->
                    <div class="form-group">
                        <input class="form-control" type="password" name="senha" id="senha" placeholder="Senha"
                               minlength="8" maxlength="20" required>
                        <small class="text-muted">
                            Escolha entre 8-20 caracteres.
                        </small>
                        <div class="invalid-feedback">Digite uma senha válida.</div>
                    </div>
                    <!-- confirma senha -->
                    <div class="form-group">
                        <input class="form-control" type="password" name="confirmaSenha" id="confirmaSenha"
                               placeholder="Confirme a senha" minlength="8" maxlength="20" required>
                        <div class="invalid-feedback">Senhas não conferem.</div>
                    </div>
                    <div class="form-group">
                        <button type="submit" class="btn btn-primary btn-lg btn-block mb-2">Criar Conta</button>
                        <small class="text-muted">
                            Já possui uma conta? <a href="/entrar">Iniciar sessão</a>
                        </small>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>


@*password match validate*@
<script>
    var senha = document.getElementById("senha"),
        confirmaSenha = document.getElementById("confirmaSenha");

    function validarSenha() {
        if (senha.value != confirmaSenha.value) {
            confirmaSenha.setCustomValidity("Senhas não conferem.");
        } else {
            confirmaSenha.setCustomValidity('');
        }
    }

    senha.onchange = validarSenha;
    confirmaSenha.onkeyup = validarSenha;
</script>

@*bootstrap pattern validate*@
<script>
    // form-validate bootstrap
    (function () {
        'use strict';
        window.addEventListener('load', function () {
            var forms = document.getElementsByClassName('needs-validation');
            var validation = Array.prototype.filter.call(forms, function (form) {
                form.addEventListener('submit', function (event) {
                    if (form.checkValidity() === false) {
                        event.preventDefault();
                        event.stopPropagation();
                    }
                    form.classList.add('was-validated');
                }, false);
            });
        }, false);
    })();
</script>

