@model Events.Models.User

@{
    ViewBag.Title = "Faça seu cadastro";
    Layout = "~/Views/Layout/_EventsLayout.cshtml";
}

@if (Session["Id"] != null)
{
    Response.Redirect("/");
}

@Styles.Render("~/custom/css")

<div class="container my-5">
    <div class="row mb-3">
        <div class="col-lg text-center">
            <a href="/" class="main-font text-light display-4">Events</a>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-5 mx-auto">
            <div class="container rounded bg-white shadow-sm p-5">
                <form action="/cadastro/criar" class="needs-validation" method="post" novalidate>
                    <h2 class="text-center mb-3">@ViewBag.Title</h2>
                    <div class="form-group">
                        @Html.EditorFor(model => model.LoginName, new { htmlAttributes = new { @class = "form-control", placeholder = "Nome completo", required = "required" } })
                        <div class="invalid-feedback">Nome inválido.</div>
                    </div>

                    <div class="form-group">
                        @Html.EditorFor(model => model.LoginEmail, new { htmlAttributes = new { @class = "form-control", name = "email", placeholder = "E-mail", type = "email", required = "required" } })
                        <div class="invalid-feedback">Email inválido.</div>
                    </div>

                    <div class="form-group">
                        @Html.EditorFor(model => model.PasswordHash, new { htmlAttributes = new { @class = "form-control", type = "password", name = "senha", id = "senha", placeholder = "Escolha uma senha", minlength = "6", maxlength = "20", required = "required" } })
                        <div class="invalid-feedback">Senha inválida.</div>
                    </div>

                    <div class="form-group">
                        @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control", type = "password", name = "confirmaSenha", id = "confirmaSenha", placeholder = "Confirme a senha", minlength = "6", maxlength = "20", required = "required" } })
                        <div class="invalid-feedback">Senhas não conferem.</div>
                    </div>

                    <div class="form-group">
                        <button type="submit" class="btn btn-primary btn-lg btn-block mb-2">Criar Conta</button>
                        <small class="text-muted">
                            Já possui uma conta? <a href="/entrar">Iniciar sessão</a>
                        </small>
                    </div>

                    @if (TempData["ErrorEmail"] != null)
                    {
                        <div class="form-group">
                            <div class="alert alert-danger alert-dismissible show" role="alert">
                                @TempData["ErrorEmail"]
                                <button type="button" class="close" data-dismiss="alert" aria-label="close">
                                    <span aria-hidden="true">&times;</span>
                                </button>
                            </div>
                        </div>
                    }
                </form>
            </div>
        </div>
    </div>
</div>

@*password match validate*@
<script>
    var senha = document.getElementById("senha"),
        confirmaSenha = document.getElementById("confirmaSenha");

    function validarSenha() {
        if (senha.value != confirmaSenha.value) {
            confirmaSenha.setCustomValidity("Senhas não conferem.");
        } else {
            confirmaSenha.setCustomValidity('');
        }
    }

    senha.onchange = validarSenha;
    confirmaSenha.onkeyup = validarSenha;
</script>

@*bootstrap pattern validate*@
<script>
    // form-validate bootstrap
    (function () {
        'use strict';
        window.addEventListener('load', function () {
            var forms = document.getElementsByClassName('needs-validation');
            var validation = Array.prototype.filter.call(forms, function (form) {
                form.addEventListener('submit', function (event) {
                    if (form.checkValidity() === false) {
                        event.preventDefault();
                        event.stopPropagation();
                    }
                    form.classList.add('was-validated');
                }, false);
            });
        }, false);
    })();
</script>
